<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Narumikazuchi.Generators.ByteSerialization</name>
    </assembly>
    <members>
        <member name="T:Narumikazuchi.Generators.ByteSerialization.AsynchronousDeserializationResult`1">
            <summary>
            Contains the result of an asynchronous deserialization operation.
            </summary>
        </member>
        <member name="P:Narumikazuchi.Generators.ByteSerialization.AsynchronousDeserializationResult`1.BytesRead">
            <summary>
            The amount of bytes read during the operation.
            </summary>
        </member>
        <member name="P:Narumikazuchi.Generators.ByteSerialization.AsynchronousDeserializationResult`1.Result">
            <summary>
            The result of the deserialization operation.
            </summary>
        </member>
        <member name="T:Narumikazuchi.Generators.ByteSerialization.ByteSerializer">
            <summary>
            Provides methods to serialize runtime objects into and from <see cref="T:System.Byte"/>[] arrays or streams.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.ByteSerializer.GetExpectedSerializedSize``1(``0)">
            <summary>
            Calculates the expected size of the <see cref="T:System.Byte"/>[] array after serialization of the sepcified runtime object.
            </summary>
            <param name="graph">The runtime object to calculate the expected size of.</param>
            <returns>The expected size of the <see cref="T:System.Byte"/>[] array after serialization.</returns>
            <remarks>
            This should NOT throw an exception however if it still does, then it indicates a problem with the code generation.
            If you encounter an exception it would help if you could contact me for a timely fix.
            </remarks>
            <exception cref="T:Narumikazuchi.Generators.ByteSerialization.TypeNotSerializable"/>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.ByteSerializer.Deserialize``1(System.ReadOnlySpan{System.Byte},``0@)">
            <summary>
            Deserializes the object from it's <see cref="T:System.Byte"/>-representation back into a runtime object of type <typeparamref name="TSerializable"/>.
            </summary>
            <param name="buffer">The <see cref="T:System.Byte"/>-representation of the object.</param>
            <param name="result">The runtime object of type <typeparamref name="TSerializable"/> that the <see cref="T:System.Byte"/>[] array represents.</param>
            <returns>The number of bytes read from the buffer.</returns>
            <remarks>
            This should NOT throw an exception however if it still does, then it indicates a problem with the code generation.
            If you encounter an exception it would help if you could contact me for a timely fix.
            </remarks>
            <exception cref="T:Narumikazuchi.Generators.ByteSerialization.TypeNotSerializable"/>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.ByteSerializer.Deserialize``1(System.Byte*,``0@)">
            <summary>
            Deserializes the object from it's <see cref="T:System.Byte"/>-representation back into a runtime object of type <typeparamref name="TSerializable"/>.
            </summary>
            <param name="buffer">The <see cref="T:System.Byte"/>-representation of the object.</param>
            <param name="result">The runtime object of type <typeparamref name="TSerializable"/> that the <see cref="T:System.Byte"/>[] array represents.</param>
            <returns>The number of bytes read from the buffer.</returns>
            <remarks>
            This should NOT throw an exception however if it still does, then it indicates a problem with the code generation.
            If you encounter an exception it would help if you could contact me for a timely fix.
            </remarks>
            <exception cref="T:Narumikazuchi.Generators.ByteSerialization.TypeNotSerializable"/>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.ByteSerializer.Deserialize``1(System.IO.Stream,``0@)">
            <summary>
            Deserializes the object from it's <see cref="T:System.Byte"/>-representation back into a runtime object of type <typeparamref name="TSerializable"/>.
            </summary>
            <param name="stream">The stream containing the raw <see cref="T:System.Byte"/>[] array.</param>
            <param name="result">The runtime object of type <typeparamref name="TSerializable"/> that the <see cref="T:System.IO.Stream"/> contains.</param>
            <returns>The number of bytes read from the buffer.</returns>
            <remarks>
            This should NOT throw an exception however if it still does, then it indicates a problem with the code generation.
            If you encounter an exception it would help if you could contact me for a timely fix.
            </remarks>
            <exception cref="T:Narumikazuchi.Generators.ByteSerialization.TypeNotSerializable"/>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.ByteSerializer.Deserialize``2(``0,``1@)">
            <summary>
            Deserializes the object from it's <see cref="T:System.Byte"/>-representation back into a runtime object of type <typeparamref name="TSerializable"/>.
            </summary>
            <param name="stream">The stream containing the raw <see cref="T:System.Byte"/>[] array.</param>
            <param name="result">The runtime object of type <typeparamref name="TSerializable"/> that the <typeparamref name="TStream"/> contains.</param>
            <returns>The number of bytes read from the buffer.</returns>
            <remarks>
            This should NOT throw an exception however if it still does, then it indicates a problem with the code generation.
            If you encounter an exception it would help if you could contact me for a timely fix.
            </remarks>
            <exception cref="T:Narumikazuchi.Generators.ByteSerialization.TypeNotSerializable"/>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.ByteSerializer.DeserializeAsynchronously``1(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Deserializes the object from it's <see cref="T:System.Byte"/>-representation back into a runtime object of type <typeparamref name="TSerializable"/>.
            </summary>
            <param name="stream">The stream containing the raw <see cref="T:System.Byte"/>[] array.</param>
            <param name="cancellationToken">The token used to cancel the operation.</param>
            <returns>The result of the deserialization.</returns>
            <remarks>
            This should NOT throw an exception however if it still does, then it indicates a problem with the code generation.
            If you encounter an exception it would help if you could contact me for a timely fix.
            </remarks>
            <exception cref="T:Narumikazuchi.Generators.ByteSerialization.TypeNotSerializable"/>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.ByteSerializer.DeserializeAsynchronously``2(``0,System.Threading.CancellationToken)">
            <summary>
            Deserializes the object from it's <see cref="T:System.Byte"/>-representation back into a runtime object of type <typeparamref name="TSerializable"/>.
            </summary>
            <param name="stream">The stream containing the raw <see cref="T:System.Byte"/>[] array.</param>
            <param name="cancellationToken">The token used to cancel the operation.</param>
            <returns>The result of the deserialization.</returns>
            <remarks>
            This should NOT throw an exception however if it still does, then it indicates a problem with the code generation.
            If you encounter an exception it would help if you could contact me for a timely fix.
            </remarks>
            <exception cref="T:Narumikazuchi.Generators.ByteSerialization.TypeNotSerializable"/>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.ByteSerializer.Serialize``1(``0)">
            <summary>
            Serializes the specified runtime object into it's raw <see cref="T:System.Byte"/>-representation.
            </summary>
            <param name="graph">The runtime object to serialize.</param>
            <returns>The <see cref="T:System.Byte"/>-representation of the specified runtime object.</returns>
            <remarks>
            This should NOT throw an exception however if it still does, then it indicates a problem with the code generation.
            If you encounter an exception it would help if you could contact me for a timely fix.
            </remarks>
            <exception cref="T:Narumikazuchi.Generators.ByteSerialization.TypeNotSerializable"/>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.ByteSerializer.Serialize``1(System.Span{System.Byte},``0)">
            <summary>
            Serializes the specified runtime object into it's raw <see cref="T:System.Byte"/>-representation.
            </summary>
            <param name="buffer">The buffer into which the <see cref="T:System.Byte"/>-representation of the specified runtime object will be stored.</param>
            <param name="graph">The runtime object to serialize.</param>
            <returns>The amount bytes written to the buffer.</returns>
            <remarks>
            This should NOT throw an exception however if it still does, then it indicates a problem with the code generation.
            If you encounter an exception it would help if you could contact me for a timely fix.
            </remarks>
            <exception cref="T:Narumikazuchi.Generators.ByteSerialization.TypeNotSerializable"/>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.ByteSerializer.Serialize``1(System.Byte*,``0)">
            <summary>
            Serializes the specified runtime object into it's raw <see cref="T:System.Byte"/>-representation.
            </summary>
            <param name="buffer">The buffer into which the <see cref="T:System.Byte"/>-representation of the specified runtime object will be stored.</param>
            <param name="graph">The runtime object to serialize.</param>
            <returns>The amount bytes written to the buffer.</returns>
            <remarks>
            This should NOT throw an exception however if it still does, then it indicates a problem with the code generation.
            If you encounter an exception it would help if you could contact me for a timely fix.
            </remarks>
            <exception cref="T:Narumikazuchi.Generators.ByteSerialization.TypeNotSerializable"/>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.ByteSerializer.Serialize``1(System.IO.Stream,``0)">
            <summary>
            Serializes the specified runtime object into it's raw <see cref="T:System.Byte"/>-representation.
            </summary>
            <param name="stream">The stream into which the <see cref="T:System.Byte"/>-representation of the specified runtime object will be written.</param>
            <param name="graph">The runtime object to serialize.</param>
            <returns>The amount bytes written to the buffer.</returns>
            <remarks>
            This should NOT throw an exception however if it still does, then it indicates a problem with the code generation.
            If you encounter an exception it would help if you could contact me for a timely fix.
            </remarks>
            <exception cref="T:Narumikazuchi.Generators.ByteSerialization.TypeNotSerializable"/>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.ByteSerializer.Serialize``2(``0,``1)">
            <summary>
            Serializes the specified runtime object into it's raw <see cref="T:System.Byte"/>-representation.
            </summary>
            <param name="stream">The stream into which the <see cref="T:System.Byte"/>-representation of the specified runtime object will be written.</param>
            <param name="graph">The runtime object to serialize.</param>
            <returns>The amount bytes written to the buffer.</returns>
            <remarks>
            This should NOT throw an exception however if it still does, then it indicates a problem with the code generation.
            If you encounter an exception it would help if you could contact me for a timely fix.
            </remarks>
            <exception cref="T:Narumikazuchi.Generators.ByteSerialization.TypeNotSerializable"/>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.ByteSerializer.SerializeAsynchronously``1(System.IO.Stream,``0,System.Threading.CancellationToken)">
            <summary>
            Serializes the specified runtime object into it's raw <see cref="T:System.Byte"/>-representation.
            </summary>
            <param name="stream">The stream into which the <see cref="T:System.Byte"/>-representation of the specified runtime object will be written.</param>
            <param name="graph">The runtime object to serialize.</param>
            <param name="cancellationToken">The token used to cancel the operation.</param>
            <returns>The amount bytes written to the buffer.</returns>
            <remarks>
            This should NOT throw an exception however if it still does, then it indicates a problem with the code generation.
            If you encounter an exception it would help if you could contact me for a timely fix.
            </remarks>
            <exception cref="T:Narumikazuchi.Generators.ByteSerialization.TypeNotSerializable"/>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.ByteSerializer.SerializeAsynchronously``2(``0,``1,System.Threading.CancellationToken)">
            <summary>
            Serializes the specified runtime object into it's raw <see cref="T:System.Byte"/>-representation.
            </summary>
            <param name="stream">The stream into which the <see cref="T:System.Byte"/>-representation of the specified runtime object will be written.</param>
            <param name="graph">The runtime object to serialize.</param>
            <param name="cancellationToken">The token used to cancel the operation.</param>
            <returns>The amount bytes written to the buffer.</returns>
            <remarks>
            This should NOT throw an exception however if it still does, then it indicates a problem with the code generation.
            If you encounter an exception it would help if you could contact me for a timely fix.
            </remarks>
            <exception cref="T:Narumikazuchi.Generators.ByteSerialization.TypeNotSerializable"/>
        </member>
        <member name="T:Narumikazuchi.Generators.ByteSerialization.IByteSerializer">
            <summary>
            -- Used for internal code generation. --
            </summary>
        </member>
        <member name="P:Narumikazuchi.Generators.ByteSerialization.IByteSerializer.Variant">
            <summary>
            -- Used for internal code generation. --
            </summary>
        </member>
        <member name="T:Narumikazuchi.Generators.ByteSerialization.IgnoreForSerializationAttribute">
            <summary>
            Ignores this member when serializing this object.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.IgnoreForSerializationAttribute.#ctor">
            <summary>
            Ignores this member when serializing this object.
            </summary>
        </member>
        <member name="T:Narumikazuchi.Generators.ByteSerialization.ISerializationHandler`1">
            <summary>
            Provides Methods to serialize a runtime object of type <typeparamref name="TSerializable"/>.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.ISerializationHandler`1.Deserialize(System.ReadOnlySpan{System.Byte},`0@)">
            <summary>
            Deserializes the contents of the <paramref name="buffer"/> into a runtime object of type <typeparamref name="TSerializable"/>.
            </summary>
            <param name="buffer">The buffer to read from.</param>
            <param name="result">The <typeparamref name="TSerializable"/> represented by the buffer.</param>
            <returns>The amount of bytes read from the buffer.</returns>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.ISerializationHandler`1.GetExpectedSize(`0)">
            <summary>
            Calculates the expected amount of bytes the specified <paramref name="graph"/> will occupy once serialized. 
            </summary>
            <param name="graph">The value to use as base for calculation.</param>
            <returns>The expected amount of bytes the value will occupy in it's serialized state.</returns>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.ISerializationHandler`1.Serialize(System.Span{System.Byte},`0)">
            <summary>
            Serializes the specified <paramref name="graph"/> into the <paramref name="buffer"/>.
            </summary>
            <param name="buffer">The buffer into which to store the serialized value.</param>
            <param name="graph">The value to serialize.</param>
            <returns>The amount of bytes written to the buffer.</returns>
        </member>
        <member name="T:Narumikazuchi.Generators.ByteSerialization.TypeCache">
            <summary>
            Caches unique ids for every serializable type.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.TypeCache.GetIdOfType``1">
            <summary>
            Gets the semi-unique id for the type <typeparamref name="TType"/>.
            </summary>
            <returns>The semi-unique id for the type <typeparamref name="TType"/>.</returns>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.TypeCache.GetIdOfType(System.Type)">
            <summary>
            Gets the semi-unique id for <paramref name="type"/>.
            </summary>
            <returns>The semi-unique id for the passed type.</returns>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.TypeCache.GetTypeCandidatesForId(System.Guid)">
            <summary>
            Gets all type candidates for the specified <paramref name="id"/>.
            </summary>
            <param name="id">The semi-unique id to lookup.</param>
            <returns>All type candidates for the specified <paramref name="id"/>.</returns>
        </member>
        <member name="T:Narumikazuchi.Generators.ByteSerialization.TypeNotSerializable">
            <summary>
            Represents the failure of the <see cref="T:Narumikazuchi.Generators.ByteSerialization.ByteSerializer"/> to serialize or deserialize a type.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Generators.ByteSerialization.TypeNotSerializable.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Narumikazuchi.Generators.ByteSerialization.TypeNotSerializable"/> exception.
            </summary>
            <param name="type">The type that failed to serialize.</param>
        </member>
    </members>
</doc>
